@model UniSAEmloyeeEmployerCertificationAndEngagement.Models.CertificateCreationViewModel

@{
    ViewBag.Title = "Generate User Candidate Certificate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Generate User Candidate Certificate</h2>

@using (Html.BeginForm("GenerateUserCandidateCertificate", "Administration", FormMethod.Post, htmlAttributes: new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Certificate Creation ViewModel</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.mergeContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("mergeContent", new List<SelectListItem>{
                    new SelectListItem{Text="Badges", Value="0" },
                    new SelectListItem{Text="Certificates", Value="1" }
           },htmlAttributes: new { @class = "select-wrapper col-md-10", @id="mergeContent"})
                @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CandidateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CandidateId", ViewBag.CandidateIdList as List<SelectListItem>, htmlAttributes: new { @class = "select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("CertificateText Separated By ;", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CertificateTextContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CertificateTextContent, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Select Certificate Image File", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                <input type="file" name="jpgCertificateImage" class="form-control fa-file-image" />
                @Html.ValidationMessage("jpgCertificateImage", "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MicroCredentialId", ViewBag.MicroCredentialIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.MicroCredentialId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialBadgeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MicroCredentialBadgeId", ViewBag.MicroCredentialBadgeIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.MicroCredentialBadgeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CandidateFullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CandidateFullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CandidateFullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Save" name="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Administration")
</div>
